<h1 class="col-xs-12">Find Tourist Trends For a Two Week Period</h1>

<!-- Google Map to eventually incorperate geocode and maps API -->
<!-- <div id="mainContent">
  <div id="content">
      <div id="mainBody">

  <input id="pac-input" class="controls" type="text"
      placeholder="Enter a location">
  <div id="type-selector" class="controls">
    <input type="radio" name="type" id="changetype-all" checked="checked">
    <label for="changetype-all">All</label>

    <input type="radio" name="type" id="changetype-establishment">
    <label for="changetype-establishment">Establishments</label>

    <input type="radio" name="type" id="changetype-address">
    <label for="changetype-address">Addresses</label>

    <input type="radio" name="type" id="changetype-geocode">
    <label for="changetype-geocode">Geocodes</label>
  </div>
  <div id="map-canvas"></div>

    </div>
  </div>
</div> -->


<div id="chart"></div>
  <h4 class="col-xs-12">Check the boxes to apply different factors</h4>
    <div class="col-xs-12">
      <span class="col-xs-12">
        <label>&nbsp; Price of Gasoline</label>
        <input type="checkbox" class="pull-left" />
      </span>
      <span class="col-xs-12">
        <label>&nbsp; Price of Air fare</label>
        <input type="checkbox" class="pull-left"/>
      </span>
      <span class="col-xs-12">
        <label> &nbsp;Events</label>
        <input type="checkbox" class="pull-left"/>
      </span>
      <span class="col-xs-12">
        <label> &nbsp;Historical Data</label>
        <input type="checkbox" class="pull-left"/>
      </span>
    </div>

    <div class="col-xs-12 spacer">
      <button class="btn btn-rnd btn-cstm-2"><a class="btn-cstm-2" href="/">One Year View</a></button>
    </div>

<script>
var data = [
  { "x": 1, "y": 1.2 },
  { "x": 2, "y": 1.2 },
  { "x": 3, "y": 1.3 },
  { "x": 4, "y": 1.0 },
  { "x": 5, "y": 1.1 },
  { "x": 6, "y": 1.4 },
  { "x": 7, "y": 2.1 },
  { "x": 8, "y": 1.3 },
  { "x": 9, "y": 1.0 },
  { "x": 10, "y": 1.5 },
  { "x": 11, "y": 1.1 },
  { "x": 12, "y": 1.0 }
];

data.forEach(function(d) {
  d.x = +d.x;
  d.y = +d.y;
});

var months = ["Jan", "Feb", "Mar","Apr","May","Jun","Jul","Aug", "Sep", "Oct", "Nov", "Dec"];
var formatDay = function(d) {
    return months[d % 12];
}

margin = {
    top: 20,
    right: 20,
    bottom: 20,
    left: 45
};

width = 800 - margin.left - margin.right;
height = 400 - margin.top - margin.bottom;

var x = d3.time.scale()
    .domain(d3.extent(data, function (d) {
    return d.x;
}))
    .range([0, width]);

var y = d3.scale.linear()
    .domain(d3.extent(data, function (d) {
    return d.y;
}))
    .range([height, 0]);

var line = d3.svg.line()
    .interpolate("basis")
    .x(function (d) {
    return x(d.x);
})
    .y(function (d) {
    return y(d.y);
});

var zoom = d3.behavior.zoom()
    .x(x)
    .on("zoom", zoomed);

svg = d3.select('#chart')
    .append("svg:svg")
    .attr('width', width + margin.left + margin.right)
    .attr('height', height + margin.top + margin.bottom)
    .append("svg:g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
    .call(zoom);

svg.append("svg:rect")
    .attr("width", width)
    .attr("height", height)
    .attr("class", "plot");

var make_x_axis = function () {
    return d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .tickFormat(formatDay)
        .ticks(5);
};

var make_y_axis = function () {
    return d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(5);
};

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(5);

svg.append("svg:g")
    .attr("class", "x axis")
    .attr("transform", "translate(0, " + height + ")")
    .call(xAxis );

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(5);

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
    .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", -45)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Volume(mil)");

svg.append("g")
    .attr("class", "x grid")

    .call(make_x_axis()
    .tickSize(-height, 0, 0)
    .tickFormat(formatDay));

svg.append("g")
    .attr("class", "y grid")
    .call(make_y_axis()
    .tickSize(-width, 0, 0)
    .tickFormat(""));

var clip = svg.append("svg:clipPath")
    .attr("id", "clip")
    .append("svg:rect")
    .attr("x", 0)
    .attr("y", 0)
    .attr("width", width)
    .attr("height", height);

var chartBody = svg.append("g")
    .attr("clip-path", "url(#clip)");

chartBody.append("svg:path")
    .data([data])
    .attr("class", "line")
    .attr("d", line);

function zoomed() {
    svg.select(".x.axis").call(xAxis);
    svg.select(".y.axis").call(yAxis);
    svg.select(".x.grid")
        .call(make_x_axis()
        .tickSize(-height, 0, 0)
        .tickFormat(formatDay));
    svg.select(".y.grid")
        .call(make_y_axis()
        .tickSize(-width, 0, 0)
        .tickFormat(""));
    svg.select(".line")
        .attr("class", "line")
        .attr("d", line);
}

</script>
